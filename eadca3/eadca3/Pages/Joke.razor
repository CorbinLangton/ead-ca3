@page "/joke"
@inject IJSRuntime JSRuntime

<div class="joke-container">
    <div class="joke-text">
        <p>@CurrentJoke</p>
    </div>
    <div class="controls-container">
        <!-- Generates a new joke when the button is clicked -->
        <button type="button" @onclick='@GenerateJoke'>Generate</button>

        <!-- User can select which category of joke they would like -->
        <label for="joke-category">Joke Category:</label>
        <select name="joke-category" id="joke-category" @ref="JokeCategoryRef" @onchange="getCategory">
            <option value="any">any</option>
            <option value="animal">animal</option>
            <option value="career">career</option>
            <option value="celebrity">celebrity</option>
            <option value="dev">dev</option>
            <option value="explicit">Explicit</option>
            <option value="fashion">Fashion</option>
            <option value="food">Food</option>
            <option value="history">History</option>
            <option value="money">Money</option>
            <option value="movie">Movie</option>
            <option value="music">Music</option>
            <option value="political">Political</option>
            <option value="religion">Religion</option>
            <option value="science">Science</option>
            <option value="sport">Sport</option>
            <option value="travel">Travel</option>
        </select>

        <!-- Allows for user to view previous jokes generated and display them again -->
        <select name="joke-history" id="joke-history" @onchange="UpdateJoke">
            <option value="" disabled selected hidden>Joke History</option>
            @foreach (var joke in JokeHistory)
            {
                <option value="@joke">@joke</option>
            }
        </select>
    </div>
</div>

@code {
    @using System.Net.Http
    @using System.Text
    @using System.Net.Http.Json
    @using System.Web
    @using Newtonsoft.Json.Linq
    @using Newtonsoft.Json

    // Variable decleration
    private string? CurrentJoke { get; set; }
    private ElementReference JokeCategoryRef { get; set; }
    private string? JokeCategory { get; set; } = "any";

    private List<string> JokeHistory = new List<string>();


    // Gets category from element
    private async Task getCategory(ChangeEventArgs e)
    {
        JokeCategory = e.Value.ToString();
    }

    // Changes the Current joke to one selected from history and updates the display
    public async Task UpdateJoke(ChangeEventArgs e)
    {
        CurrentJoke = e.Value.ToString();
        StateHasChanged();
    }

    public JokeJson JokeObject = new JokeJson();

    // Generates a new joke via the API
    public async Task GenerateJoke()
    {
        // Checks the category of the array as the URL for a specific category is different from just a general request
        if (JokeCategory == "any")
        {
            try
            {
                // Creates a new HTTP client and sends a GET request
                using HttpClient client = new HttpClient();
                var res = await client.GetStringAsync("https://api.chucknorris.io/jokes/random");
                // Creates an object based on the JSON returned
                JokeObject = JsonConvert.DeserializeObject<JokeJson>(res);
                CurrentJoke = JokeObject.value;
                // Add the joke to the history array
                if (!JokeHistory.Contains(CurrentJoke))
                {
                    JokeHistory.Add(CurrentJoke);
                }
                // Update the UI
                StateHasChanged();
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
        }
        else
        {
            try
            {
                // Creates a new HTTP client and sends a GET request
                using HttpClient client = new HttpClient();
                var res = await client.GetStringAsync($"https://api.chucknorris.io/jokes/random?category={JokeCategory}");
                // Creates an object based on the JSON returned
                JokeObject = JsonConvert.DeserializeObject<JokeJson>(res);
                CurrentJoke = JokeObject.value;
                // Add the joke to the history array
                if (!JokeHistory.Contains(CurrentJoke))
                {
                    JokeHistory.Add(CurrentJoke);
                }
                // Update the UI
                StateHasChanged();
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
        }
    }

    // JSON object
    public class JokeJson
    {
        public List<string>? categories { get; set; }
        public string? created_at { get; set; }
        public string? icon_url { get; set; }
        public string? id { get; set; }
        public string? updated_at { get; set; }
        public string? url { get; set; }
        public string? value { get; set; }
    }
}
